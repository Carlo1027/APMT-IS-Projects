USE [Inland]
GO
/****** Object:  StoredProcedure [tco].[cliente_registrar]    Script Date: 3/12/2018 10:22:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [tco].[cliente_registrar]
	@Usuario_registro_id INT,
	@Unidad_negocio_id INT,
	@Documento_identidad VARCHAR(MAX),
	@Tipo_documento INT,
	@Razon_social VARCHAR(MAX),
	@Activo CHAR(1),
	@estado INT OUT,
	@mensaje varchar(max) OUT 
AS

SET NOCOUNT ON

BEGIN TRY
	DECLARE @Empresa_id INT
	
	if(SELECT COUNT(*) FROM ges.empresa CLI WHERE CLI.documento=@Documento_identidad AND CLI.unidad_negocio_id=@Unidad_negocio_id AND CLI.tipo_documento=@Tipo_documento) = 0 
	BEGIN
		-- Registro cliente
		INSERT INTO 
				ges.empresa(documento, tipo_documento, razon_social, estado, unidad_negocio_id, usuario_registro_id)
		VALUES
				(@Documento_identidad, @Tipo_documento, @Razon_social, @Activo, @Unidad_negocio_id, @Usuario_registro_id)
		SET @Empresa_id = @@IDENTITY

		--INSERT INTO tco.cliente (cliente_id)
		--VALUES (@Empresa_id)

		SET @estado = 1
		SET @mensaje = 'Se registr√≥ la empresa correctamente'
	END
	ELSE
	BEGIN
		SET @estado = 0;
		SET @mensaje = 'La empresa ya se encuentra registrada';
	END
END TRY
BEGIN CATCH
       
    DECLARE @log_id INT, @el INT = ERROR_LINE(), @en INT = ERROR_NUMBER(), @em NVARCHAR(4000) = ERROR_MESSAGE()
    EXEC seg.log_registrar @Usuario_registro_id, 'tco.cliente_editar', @el, @en, @em, @log_id OUTPUT
    SET @mensaje = CAST(@log_id AS VARCHAR)+' | '+ERROR_MESSAGE();
    SET @estado = 0;

END CATCH
	
	
